/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Experiental implementation of a production chain for LNG.
 */

namespace org.supplychain.LNG.model

/**
 * ASSETS
 */

enum AssetStatus {
  o CREATED
  o IN_PROCESS
  o READY
}

abstract asset GHGcarrierAsset identified by assetId {
  o String assetId
  o AssetStatus assetStatus
  o Double aggregatedGHG
  --> GHGProductionState atState
}

abstract asset PhisicalAsset extends GHGcarrierAsset {
  o Double amount
}

abstract asset LiquidAsset extends GHGcarrierAsset {
  o Double amount
}

asset LNG extends LiquidAsset {
}

/**
 * PARTICIPANTS
 */

concept Address {
  o String country
  o String city optional
  o String street optional
  o Integer hauseNr optional
}

abstract participant GHGProductionState identified by stateId {
  o String stateId
  o String stateName
  o Address address optional
  o Double GHG 
  --> GHGProductionState[] stateFrom
}

// any kind of a state
participant ProductionState extends GHGProductionState {
  
}

// start state
participant GasFieldState extends GHGProductionState {
  
}

// end state
participant LNGToPipelineState extends GHGProductionState {
  
}

/**
 * TRANSACTION
 */

transaction InitTestData {
}

transaction ClearData {
}

transaction ChangeState {
  --> GHGcarrierAsset assetToTransfer
  --> GHGProductionState fromState
  --> GHGProductionState toState
}

transaction Create {
  --> GasFieldState gasFieldState
}

transaction ToPipieline {
  --> GHGcarrierAsset assetToPipeline  
  --> LNGToPipelineState pipeLineState
}

/**
 * EVENTS
 */

event AssetCreated {
  --> GHGcarrierAsset gHGcarrierAsset
  o Double creationGHG
}

event AssetStateChanged {
  --> GHGcarrierAsset gHGcarrierAsset
  o Double transferGHG
}

event AssetSentToPipeline {
  --> GHGcarrierAsset gHGcarrierAsset
  o Double sellingGHG
}